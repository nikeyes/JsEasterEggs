{"version":3,"sources":["jsSnow.js"],"names":["__maxWidth","__maxHeight","__canvas","__ctx","__maxSnowflakes","__addEventHandler","elem","eventType","handler","addEventListener","attachEvent","__snowflakes","JsSnow","window","innerWidth","innerHeight","__createCanvas","call","this","__initializeEvents","__createInitialSnowflakes","setInterval","__draw","width","height","document","createElement","id","setAttribute","getContext","body","insertBefore","firstChild","i","push","x","Math","random","y","radius","density","clearRect","fillStyle","beginPath","snowflake","moveTo","arc","PI","fill","__update","angle","p","cos","sin","prototype","constructor"],"mappings":"CACC,WACG,YAEH,IAOIA,GACHC,EACAC,EACAC,EACAC,EAXGC,EAAoB,SAAUC,EAAKC,EAAUC,GAC5CF,EAAKG,iBACRH,EAAKG,iBAAkBF,EAAUC,GAAQ,GACjCF,EAAKI,aACbJ,EAAKI,YAAa,KAAKH,EAAUC,IAQ/BG,KAGAC,EAAS,WAsBZZ,EAAaa,OAAOC,WACpBb,EAAcY,OAAOE,YACrBX,EAAkB,IAElBY,EAAeC,KAAKC,MACpBC,EAAmBF,KAAKC,MACxBE,EAA0BH,KAAKC,MAC/BG,YAAYC,EAAQ,KAIjBH,EAAqB,WACxBd,EAAkBQ,OAAQ,SAAU,WACnCb,EAAaa,OAAOC,WACpBb,EAAcY,OAAOE,YACrBb,EAASqB,MAAQvB,EACjBE,EAASsB,OAASvB,KAIhBe,EAAiB,WACpBd,EAAWuB,SAASC,cAAc,UAClCxB,EAASyB,GAAK,SACdzB,EAASqB,MAAQvB,EACjBE,EAASsB,OAASvB,EAClBC,EAAS0B,aAAa,QAAS,4EAC/BzB,EAAQD,EAAS2B,WAAW,MAE5BJ,SAASK,KAAKC,aAAa7B,EAAUuB,SAASK,KAAKE,aAGhDZ,EAA4B,WAC/B,IAAI,GAAIa,GAAI,EAAO7B,EAAJ6B,EAAqBA,IAEnCtB,EAAauB,MACZC,EAAGC,KAAKC,SAAWrC,EACnBsC,EAAGF,KAAKC,SAAWpC,EACnBsC,OAAwB,EAAhBH,KAAKC,SACbG,QAASJ,KAAKC,SAAWjC,KAKxBkB,EAAS,WACZnB,EAAMsC,UAAU,EAAG,EAAGzC,EAAYC,GAElCE,EAAMuC,UAAY,2BAClBvC,EAAMwC,WACN,KAAI,GAAIV,GAAI,EAAO7B,EAAJ6B,EAAqBA,IACpC,CACC,GAAIW,GAAYjC,EAAasB,EAC7B9B,GAAM0C,OAAOD,EAAUT,EAAGS,EAAUN,GACpCnC,EAAM2C,IAAIF,EAAUT,EAAGS,EAAUN,EAAGM,EAAUL,OAAQ,EAAa,EAAVH,KAAKW,IAAQ,GAGvE5C,EAAM6C,OACNC,EAAShC,KAAKC,OAGXgC,EAAQ,EACRD,EAAW,WACdC,GAAS,GACT,KAAI,GAAIjB,GAAI,EAAO7B,EAAJ6B,EAAqBA,IACpC,CACC,GAAIkB,GAAIxC,EAAasB,EAOrBkB,GAAEb,GAAKF,KAAKgB,IAAIF,EAAQC,EAAEX,SAAW,EAAIW,EAAEZ,OAAS,EACpDY,EAAEhB,GAAuB,EAAlBC,KAAKiB,IAAIH,IAIbC,EAAEhB,EAAInC,EAAa,GAAKmD,EAAEhB,EAAI,IAAMgB,EAAEb,EAAItC,KAI3CW,EAAasB,GAFXA,EAAE,EAAI,GAEWE,EAAGC,KAAKC,SAAWrC,EAAYsC,EAAG,IAAKC,OAAQY,EAAEZ,OAAQC,QAASW,EAAEX,SAKpFJ,KAAKiB,IAAIH,GAAS,GAGDf,EAAG,GAAIG,EAAGF,KAAKC,SAAWpC,EAAasC,OAAQY,EAAEZ,OAAQC,QAASW,EAAEX,UAKpEL,EAAGnC,EAAa,EAAGsC,EAAGF,KAAKC,SAAWpC,EAAasC,OAAQY,EAAEZ,OAAQC,QAASW,EAAEX,WAOxG5B,GAAO0C,WACNC,YAAc3C,GAGf,GAAIA","file":"jsSnow.min.js","sourcesContent":["/*Based on: http://thecodeplayer.com/walkthrough/html5-canvas-snow-effect*/\r\n(function () {\r\n    \"use strict\";\r\n\t\r\n\tvar __addEventHandler = function (elem,eventType,handler) {\r\n\t\tif (elem.addEventListener)\r\n\t\t\telem.addEventListener (eventType,handler,false);\r\n\t\telse if (elem.attachEvent)\r\n\t\t\telem.attachEvent ('on'+eventType,handler); \r\n\t};\r\n\t\r\n\tvar __maxWidth,\r\n\t\t__maxHeight,\r\n\t\t__canvas,\r\n\t\t__ctx,\r\n\t\t__maxSnowflakes,\r\n\t    __snowflakes = [];\r\n\t\r\n\r\n\tvar JsSnow = function () {\r\n\t\t/*if (options && options.maxWidth) {\r\n\t\t\t__maxWidth = options.maxWidth;\r\n\t\t}\r\n\t\telse if (window.JsSnowOptions && window.JsSnowOptions.maxWidth) {\r\n\t\t\t__maxWidth = window.JsSnowOptions.maxWidth;\r\n\t\t} \r\n\t\telse {\r\n\t\t\t__maxWidth = window.innerWidth;\t\r\n\t\t} \r\n\t\t\r\n\t\tif (options && options.maxHeight) {\r\n\t\t\t__maxHeight = options.maxHeight;\r\n\t\t}\r\n\t\telse if (window.JsSnowOptions && window.JsSnowOptions.maxHeight) {\r\n\t\t\t__maxHeight = window.JsSnowOptions.maxHeight;\r\n\t\t} \r\n\t\telse {\r\n\t\t\t__maxHeight = window.innerHeight;\t\r\n\t\t}*/\r\n\t\t\r\n\t\t\r\n\t\t__maxWidth = window.innerWidth;\t\r\n\t\t__maxHeight = window.innerHeight;\t\r\n\t\t__maxSnowflakes = 1000;\r\n\t\t\r\n\t\t__createCanvas.call(this);\r\n\t\t__initializeEvents.call(this);\r\n\t\t__createInitialSnowflakes.call(this);\r\n\t\tsetInterval(__draw, 33);\r\n\t\r\n\t};\r\n\t\r\n\tvar __initializeEvents = function () {\r\n\t\t__addEventHandler(window, \"resize\", function() {\r\n\t\t\t__maxWidth = window.innerWidth;\r\n\t\t\t__maxHeight = window.innerHeight;\r\n\t\t\t__canvas.width = __maxWidth;\r\n\t\t\t__canvas.height = __maxHeight;\r\n\t\t});\t\r\n\t};\r\n\t\r\n\tvar __createCanvas = function () {\r\n\t\t__canvas = document.createElement(\"canvas\");\r\n\t\t__canvas.id = \"canvas\";\r\n\t\t__canvas.width = __maxWidth;\r\n\t\t__canvas.height = __maxHeight;\r\n\t\t__canvas.setAttribute('style', 'pointer-events:none;position: absolute; z-index: 1000000; left:0; top:0;');\r\n\t\t__ctx = __canvas.getContext(\"2d\");\r\n\t\t\t\r\n\t\tdocument.body.insertBefore(__canvas, document.body.firstChild);\t\t\r\n\t};\r\n\t\r\n\tvar __createInitialSnowflakes = function () {\r\n\t\tfor(var i = 0; i < __maxSnowflakes; i++)\r\n\t\t{\r\n\t\t\t__snowflakes.push({\r\n\t\t\t\tx: Math.random() * __maxWidth,\r\n\t\t\t\ty: Math.random() * __maxHeight, \r\n\t\t\t\tradius: Math.random() * 5,\r\n\t\t\t\tdensity: Math.random() * __maxSnowflakes\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\t\r\n\tvar __draw = function () {\r\n\t\t__ctx.clearRect(0, 0, __maxWidth, __maxHeight);\r\n\t\t\r\n\t\t__ctx.fillStyle = \"rgba(255, 255, 255, 0.8)\";\r\n\t\t__ctx.beginPath();\r\n\t\tfor(var i = 0; i < __maxSnowflakes; i++)\r\n\t\t{\r\n\t\t\tvar snowflake = __snowflakes[i];\r\n\t\t\t__ctx.moveTo(snowflake.x, snowflake.y);\r\n\t\t\t__ctx.arc(snowflake.x, snowflake.y, snowflake.radius, 0, Math.PI * 2, true);\r\n\t\t}\r\n\t\t\r\n\t\t__ctx.fill();\r\n\t\t__update.call(this);\r\n\t};\r\n\t\r\n\tvar angle = 0;\r\n\tvar __update = function () {\r\n\t\tangle += 0.01;\r\n\t\tfor(var i = 0; i < __maxSnowflakes; i++)\r\n\t\t{\r\n\t\t\tvar p = __snowflakes[i];\r\n\t\t\t\r\n\t\t\t//angle will be an ongoing incremental flag. Sin and Cos functions will be applied to it to create vertical and horizontal movements of the flakes\r\n\t\t\t//Updating X and Y coordinates\r\n\t\t\t//We will add 1 to the cos function to prevent negative values which will lead flakes to move upwards\r\n\t\t\t//Every particle has its own density which can be used to make the downward movement different for each flake\r\n\t\t\t//Lets make it more random by adding in the radius\r\n\t\t\tp.y += Math.cos(angle + p.density) + 1 + p.radius / 2;\r\n\t\t\tp.x += Math.sin(angle) * 2;\r\n\t\t\t\r\n\t\t\t//Sending flakes back from the top when it exits\r\n\t\t\t//Lets make it a bit more organic and let flakes enter from the left and right also.\r\n\t\t\tif(p.x > __maxWidth + 5 || p.x < -5 || p.y > __maxWidth)\r\n\t\t\t{\r\n\t\t\t\tif(i%3 > 0) //66.67% of the flakes\r\n\t\t\t\t{\r\n\t\t\t\t\t__snowflakes[i] = {x: Math.random() * __maxWidth, y: -10, radius: p.radius, density: p.density};\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\t//If the flake is exitting from the right\r\n\t\t\t\t\tif(Math.sin(angle) > 0)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t//Enter from the left\r\n\t\t\t\t\t\t__snowflakes[i] = {x: -5, y: Math.random() * __maxHeight, radius: p.radius, density: p.density};\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t//Enter from the right\r\n\t\t\t\t\t\t__snowflakes[i] = {x: __maxWidth + 5, y: Math.random() * __maxHeight, radius: p.radius, density: p.density};\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\t\r\n\tJsSnow.prototype = {\r\n\t\tconstructor : JsSnow,\r\n\t};\r\n\t\r\n\tnew JsSnow();\r\n}());\r\n"],"sourceRoot":"/source/"}